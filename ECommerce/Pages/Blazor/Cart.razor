@page "/Cart"

@using ECommerce.Data
@inject ECommerce.Data.Cart _cart
@inject ECommerce.Services.IProduct _productService

<h1>Shoping cart</h1>

<table class="table table-hover">
    <tr>
        <th>Product</th>
        <th>Quantity</th>
        <th>Price</th>
    </tr>
    <tr>
        @foreach (var item in cartLines)
        {
            <td>@item.Product.Name</td>
            <td>
                <button class="btn btn-primary" @onclick="@(()=>RemoveFromCart(item.Product.Id))">-</button>
                @item.Quantity
                <button class="btn btn-primary" @onclick="@(()=>AddToCart(item.Product.Id))">+</button>
            </td>
            <td>@(item.Quantity*item.Product.Price)</td>
        }
    </tr>
</table>



<div class="mt-3">
    @*This shows that you can link to the MVC app. However, you have to use target="_self",
        or Blazor will intercept the link and try to route the traffic to a matching
        page, SPA-style.*@

    <a href="/Home" target="_self">Link to MVC</a>
</div>


@code {
    private List<CartLine> cartLines;

    protected override async Task OnInitializedAsync()
    {
        cartLines = _cart.Lines.ToList();
    }

    private void AddToCart(int id)
    {
        var product = _productService.GetProductById(id);
        if (product != null)
        {
            _cart.AddItem(product, 1);
        }
    }

    private void RemoveFromCart(int id)
    {
        var product = _productService.GetProductById(id);
        if (product != null)
        {
            _cart.SubItem(product, 1);
        }
    }
}