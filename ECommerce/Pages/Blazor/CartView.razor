@page "/CartView"

@using ECommerce.Data
@inject ECommerce.Data.Cart _cart
@inject ECommerce.Services.IProduct _productService

<h4 class="modal-title">Shopping cart</h4>
@if (cartLines.Count() == 0)
{
    <h2 style="text-align:center; margin-top:50px">
        The basket is currently empty
    </h2>
}
else
{
    <div class="container col-9 text-center">
        <div class="modal_list">
            @{
                int iter = 0;
                foreach (var item in cartLines)
                {
                    iter++;
                    string modalId = $"itemId{@iter}";

                    if (item.Quantity!=0)
                    {
                        <div class="row modal_item">
                            <button @onclick="@(()=>DeleteCartItem(item.Product.Id))">
                                <span class="closeModal" href="#">&times;</span>
                            </button>
                            <div class="modal_item_img">
                                <div class="ih_modal_item_img ih-item circle effect19 top_to_bottom">
                                    <a href="#">
                                        <div class="img">
                                            <img class="modal_item_img" src="@item.Product.Image">
                                        </div>
                                    </a>
                                </div>
                            </div>
                            <div class="modal_item_info">
                                <p class="modal_item_info_text">@item.Product.Name</p>
                                <p class="modal_item_info_text">@item.Product.Price.ToString("C2")</p>
                            </div>
                            <div class="modal_counter mt-5">
                                <button class="minus" @onclick="@(() => RemoveFromCart(item.Product.Id))">-</button>
                                <p class="count">@item.Quantity</p>
                                <button class="plus" @onclick="@(() => AddToCart(item.Product.Id))">+</button>
                            </div>
                            <div class="modal_item_total">
                                <p>@(item.Quantity * item.Product.Price)</p>
                            </div>
                        </div>
                    }
                }
            }

        </div>
    </div>
}

<div class="mt-3">
    @*This shows that you can link to the MVC app. However, you have to use target="_self",
        or Blazor will intercept the link and try to route the traffic to a matching
        page, SPA-style.*@

    <a href="/Home" target="_self">Link to MVC</a>
</div>


@code {
    private List<CartLine> cartLines;

    protected override async Task OnInitializedAsync()
    {
        cartLines = _cart.Lines.ToList();
    }

    private void AddToCart(int id)
    {
        var product = _productService.GetProductById(id);
        if (product != null)
        {
            _cart.AddItem(product, 1);
        }
    }

    private void RemoveFromCart(int id)
    {
        var product = _productService.GetProductById(id);
        if (product != null)
        {
            _cart.SubItem(product, 1);
        }
    }

    private void DeleteCartItem(int id)
    {
        var product = _productService.GetProductById(id);
        if (product != null)
        {
            _cart.RemoveLine(product);
        }
    }
    //private int GetItemId()
    //{
    //    var item =
    //    return 1;
    //}
}
